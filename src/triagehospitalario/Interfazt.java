/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package triagehospitalario;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Janeth
 */
public class Interfazt extends javax.swing.JFrame {

    /**
     * Creates new form Interfazt
     */
    public Interfazt() {
        initComponents();
        this.setTitle("TRIAGE EMBARAZO");

        ImageIcon prin = new ImageIcon(getClass().getResource("/img/enfer.png"));
        ImageIcon ajus = new ImageIcon(prin.getImage().getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_DEFAULT));
        jLabel2.setIcon(ajus);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Registro = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Monitoreo TRIAGE");

        jLabel2.setText("jLabel2");

        Registro.setText("Registro");
        Registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistroActionPerformed(evt);
            }
        });

        jButton1.setText("Informacion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jButton1)
                        .addGap(48, 48, 48)
                        .addComponent(Registro))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel1)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Registro)
                    .addComponent(jButton1))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistroActionPerformed
        String respTem = "";
        String selRegla = "";
        Mecanismo in = new Mecanismo();
        ImageIcon doctor = new ImageIcon(getClass().getResource("/img/808950.png"));
        ImageIcon doctor2 = new ImageIcon(doctor.getImage().getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_DEFAULT));
        ImageIcon emer = new ImageIcon(getClass().getResource("/img/emergencias.png"));
        ImageIcon emer2 = new ImageIcon(doctor.getImage().getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_DEFAULT));
        ImageIcon emer3 = new ImageIcon(getClass().getResource("/img/emer3.jpg"));
         ImageIcon triage = new ImageIcon(getClass().getResource("/img/triage.png"));

        String[] edad = {
            "Menor",
            "Adulta",
            "Mayor"
        };//mayor de edad
        String answer = (String) JOptionPane.showInputDialog(null, "Especifique edad del Paciente: \n"
                + "Menor : Menor a 17 años\n"
                + "Adulta : Entre 18 y 59 años \n"
                + "Mayor : Mayor a 60 años", "Consulta",
                JOptionPane.DEFAULT_OPTION, doctor2, edad, edad[0]);
        in.obtRango(answer);
        System.out.println(in);
        if (answer.equals("Mayor")) {
            selRegla = in.getResult();
            JOptionPane.showMessageDialog(null, selRegla, "Emergencia", JOptionPane.PLAIN_MESSAGE, emer3);
            //seleccionar menor 
        } else if (answer.equals("Menor")) {
            String[] ar1 = {
                "Si",
                "No"
            };//mayor de edad

            String answer2 = (String) JOptionPane.showInputDialog(null, "Sangrado TransVaginal: \n", "Consulta",
                    JOptionPane.DEFAULT_OPTION, doctor2, ar1, ar1[0]);
            //in.obtDato1(answer2);
            String[] ar2 = {
                "Si",
                "No"
            };//mayor de edad

            String answer3 = (String) JOptionPane.showInputDialog(null, "Dolor: \n", "Consulta",
                    JOptionPane.DEFAULT_OPTION, doctor2, ar2, ar2[0]);
            //in.obtDato2(answer3);
            String[] ar3 = {
                "Si",
                "No"
            };

            String answer4 = (String) JOptionPane.showInputDialog(null, "Líquido Amniotico: \n", "Consulta",
                    JOptionPane.DEFAULT_OPTION, doctor2, ar3, ar3[0]);
            //in.obtDato3(answer4); 
            in.resInt(answer2, answer3, answer4);
            selRegla = in.getResult();
            JOptionPane.showMessageDialog(null, selRegla,"Consulta", JOptionPane.PLAIN_MESSAGE, emer);
            //seleccionar 
            selRegla = in.getResult();
            //Menor sin nada Menor ,con Sangrado
            if (selRegla.equals("Menor N") || selRegla.equals("Menor S")) {
                //Mov fetales
                int answer5 = JOptionPane.showConfirmDialog(null, "¿Se presentan Movimientos Fetales?", "Consulta",
                        JOptionPane.YES_NO_OPTION);
                if (answer5 == 0) {
                    answer = "Si";
                } else {
                    answer = "No";
                }
                in.obtMovFet(answer);
                selRegla = in.getResult();
                //menor con mv fetales
                if (selRegla.equals("Menor Pasa")) {
                    int answer6 = JOptionPane.showConfirmDialog(null, "¿Hipertension Arterial Normal?", "Consulta",
                            JOptionPane.YES_NO_OPTION);
                    if (answer6 == 0) {
                        answer = "Normal";
                    } else {
                        answer = "Alta";
                    }
                    in.obtHipArt(answer);
                    selRegla = in.getResult();
                    //resultado hipertension Normal
                    if (selRegla.equals("Menor Pasa")) {
                        //frecuencia cardiaca
                        String[] frCar = {
                            "Regular",
                            "Media",
                            "Alta"
                        };//mayor de edad

                        String answer7 = (String) JOptionPane.showInputDialog(null, "Frecuencia Cardiaca: \n"
                                + "Normal: Entre 60-100 \n"
                                + "Anormal: Mayor a 100 o menor a 60\n"
                                + "Alta o de riesgo: Mayor a 120 o menor a 50 ", "Consulta",
                                JOptionPane.DEFAULT_OPTION, doctor2, frCar, frCar[0]);
                        in.obtFrecCar(answer7);
                        selRegla = in.getResult();
                        //resultado frecuencia cardiaca normal o anormal
                        if (selRegla.equals("Menor Pasa")) {
                             String[] temp = {
                            "Normal",
                            "Anormal",
                            "Alta"
                        };//mayor de edad

                        String answer8 = (String) JOptionPane.showInputDialog(null, "Temperatura: \n"
                                + "Normal: Entre 37 y 37.5° Celsius \n"
                                + "Anormal: Mayor a 38° Celsius\n"
                                + "Alta o de riesgo: Mayor a 40° Celsius ", "Consulta",
                                JOptionPane.DEFAULT_OPTION, doctor2, temp, temp[0]);
                            in.obtTemp(answer8);
                         //frecuencia cardiaca alta
                         selRegla=in.getResult();
                         if(selRegla.equals("Menor Pasa")||selRegla.equals("Menor Anormal")){
                           JOptionPane.showMessageDialog(null, selRegla, "Resultado final", JOptionPane.PLAIN_MESSAGE, emer3);
                         }else{
                           JOptionPane.showMessageDialog(null, selRegla, "Emergencia", JOptionPane.PLAIN_MESSAGE, emer3);
                           
                         }
                        } else {
                            JOptionPane.showMessageDialog(null, selRegla, "Emergencia Frecuencia Cardiaca", JOptionPane.PLAIN_MESSAGE, emer3);
                        }
                        //hipertension alta    
                    } else {
                        selRegla = in.getResult();
                        JOptionPane.showMessageDialog(null, selRegla, "Emergencia Hipertension", JOptionPane.PLAIN_MESSAGE, emer3);
                    }
                    //menor sin movimientos fetales
                } else {
                    selRegla = in.getResult();
                    JOptionPane.showMessageDialog(null, selRegla, "Emergencia", JOptionPane.PLAIN_MESSAGE, emer3);

                }
                //JOptionPane.showMessageDialog(null, in.getResult());
                //paciente con Dolor o salida de liquido o ambos  
            } else {
                selRegla = in.getResult();
                JOptionPane.showMessageDialog(null, selRegla, "Emergencia", JOptionPane.PLAIN_MESSAGE, emer3);
            }
            //Adulta
        } else {
            String[] ar1 = {
                "Si",
                "No"
            };//mayor de edad

            String answer2 = (String) JOptionPane.showInputDialog(null, "Sangrado TransVaginal: \n", "Consulta",
                    JOptionPane.DEFAULT_OPTION, doctor2, ar1, ar1[0]);
            //in.obtDato1(answer2);
            String[] ar2 = {
                "Si",
                "No"
            };//mayor de edad

            String answer3 = (String) JOptionPane.showInputDialog(null, "Dolor: \n", "Consulta",
                    JOptionPane.DEFAULT_OPTION, doctor2, ar2, ar2[0]);
            //in.obtDato2(answer3);
            String[] ar3 = {
                "Si",
                "No"
            };

            String answer4 = (String) JOptionPane.showInputDialog(null, "Líquido Amniotico: \n", "Consulta",
                    JOptionPane.DEFAULT_OPTION, doctor2, ar3, ar3[0]);
            //in.obtDato3(answer4); 
            in.resInt(answer2, answer3, answer4);
            selRegla = in.getResult();
            JOptionPane.showMessageDialog(null, selRegla);
            //seleccionar 
            selRegla = in.getResult();
            //Menor sin nada Menor ,con Sangrado
            if (selRegla.equals("Adulta N") || selRegla.equals("Adulta S")) {
                //Mov fetales
                int answer5 = JOptionPane.showConfirmDialog(null, "¿Se presentan Movimientos Fetales?", "Consulta",
                        JOptionPane.YES_NO_OPTION);
                if (answer5 == 0) {
                    answer = "Si";
                } else {
                    answer = "No";
                }
                in.obtMovFet(answer);
                selRegla = in.getResult();
                //menor con mv fetales
                if (selRegla.equals("Adulta Pasa")) {
                    int answer6 = JOptionPane.showConfirmDialog(null, "¿Hipertension Arterial Normal?", "Consulta",
                            JOptionPane.YES_NO_OPTION);
                    if (answer6 == 0) {
                        answer = "Normal";
                    } else {
                        answer = "Alta";
                    }
                    in.obtHipArt(answer);
                    selRegla = in.getResult();
                    //resultado hipertension Normal
                    if (selRegla.equals("Adulta Pasa")) {
                        //frecuencia cardiaca
                        String[] frCar = {
                            "Regular",
                            "Media",
                            "Alta"
                        };//mayor de edad

                        String answer7 = (String) JOptionPane.showInputDialog(null, "Frecuencia Cardiaca: \n"
                                + "Normal: Entre 60-100 \n"
                                + "Anormal: Mayor a 100 o menor a 60\n"
                                + "Alta o de riesgo: Mayor a 120 o menor a 50 ", "Consulta",
                                JOptionPane.DEFAULT_OPTION, doctor2, frCar, frCar[0]);
                        in.obtFrecCar(answer7);
                        selRegla = in.getResult();
                        //resultado frecuencia cardiaca normal o anormal
                        if (selRegla.equals("Adulta Pasa")) {
                             String[] temp = {
                            "Normal",
                            "Anormal",
                            "Alta"
                        };//mayor de edad

                        String answer8 = (String) JOptionPane.showInputDialog(null, "Temperatura: \n"
                                + "Normal: Entre 37 y 37.5° Celsius \n"
                                + "Anormal: Mayor a 38° Celsius\n"
                                + "Alta o de riesgo: Mayor a 40° Celsius ", "Consulta",
                                JOptionPane.DEFAULT_OPTION, doctor2, temp, temp[0]);
                            in.obtTemp(answer8);
                         //frecuencia cardiaca alta
                         selRegla=in.getResult();
                         if(selRegla.equals("Adulta Pasa")||selRegla.equals("Adulta Anormal")){
                           JOptionPane.showMessageDialog(null, selRegla, "Resultado final", JOptionPane.PLAIN_MESSAGE, emer3);
                         }else{
                           JOptionPane.showMessageDialog(null, selRegla, "Emergencia", JOptionPane.PLAIN_MESSAGE, emer3);
                           
                         }
                        } else {
                            JOptionPane.showMessageDialog(null, selRegla, "Emergencia Frecuencia Cardiaca", JOptionPane.PLAIN_MESSAGE, emer3);
                        }
                        //hipertension alta    
                    } else {
                        selRegla = in.getResult();
                        JOptionPane.showMessageDialog(null, selRegla, "Emergencia Hipertension", JOptionPane.PLAIN_MESSAGE, emer3);
                    }
                    //menor sin movimientos fetales
                } else {
                    selRegla = in.getResult();
                    JOptionPane.showMessageDialog(null, selRegla, "Emergencia Mov Fetales", JOptionPane.PLAIN_MESSAGE, emer3);

                }
                //JOptionPane.showMessageDialog(null, in.getResult());
                //paciente con Dolor o salida de liquido o ambos  
            } else {
                selRegla = in.getResult();
                JOptionPane.showMessageDialog(null, selRegla, "Emergencia Dolor", JOptionPane.PLAIN_MESSAGE, emer3);
            }

        }


    }//GEN-LAST:event_RegistroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         JOptionPane.showMessageDialog(null, "TRIAGE", "Emergencia Mov Fetales", JOptionPane.PLAIN_MESSAGE, new ImageIcon("/img/obstetrico.png"));

                
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfazt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfazt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfazt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfazt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfazt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Registro;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
